<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Elm | Fractal Banana]]></title>
  <link href="http://fractalbanana.com/blog/categories/elm/atom.xml" rel="self"/>
  <link href="http://fractalbanana.com/"/>
  <updated>2016-08-16T00:12:31-07:00</updated>
  <id>http://fractalbanana.com/</id>
  <author>
    <name><![CDATA[Brad Urani]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Live Coding Building a Game in Elm]]></title>
    <link href="http://fractalbanana.com/blog/2015/12/01/live-coding-building-a-game-in-elm/"/>
    <updated>2015-12-01T01:55:03-08:00</updated>
    <id>http://fractalbanana.com/blog/2015/12/01/live-coding-building-a-game-in-elm</id>
    <content type="html"><![CDATA[<p>I live coded a game recently using my new obsession: <a href="http://elm-lang.org">Elm</a></p>

<p>If you haven&rsquo;t tried Elm, you&rsquo;re missing out. It&rsquo;s a purely functional reactive programing language that compiles to JavaScript for front end web development. There are 4 hours of video from on <a href="http://livecoding.tv">livecoding.tv</a> split into 4 parts:<br/>
<a href="https://www.livecoding.tv/video/building-a-game-in-elm-pt-1a/">Part 1a</a><br/>
<a href="https://www.livecoding.tv/video/building-a-game-in-elm-pt-1b/">Part 2b</a><br/>
<a href="https://www.livecoding.tv/video/building-a-game-in-elm-2/">Part 2</a><br/>
<a href="https://www.livecoding.tv/video/building-a-game-in-elm-3/">Part 3</a></p>

<p>The finished program is on <a href="https://github.com/bradurani/connect-four-elm">GitHub</a>. The master branch is the completed program with a computer player AI using the minimax algorithm. branches <a href="https://github.com/bradurani/connect-four-elm/tree/part-1">part-1</a> and <a href="https://github.com/bradurani/connect-four-elm/tree/part-2">part-2</a> contain the code I wrote during the livecoding sessions</p>
]]></content>
  </entry>
  
</feed>
